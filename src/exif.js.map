{"version":3,"sources":["../../src/exif.ts"],"names":[],"mappings":"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","file":"exif.js","sourceRoot":"","sourcesContent":["export class Fraction extends Number {\n  numerator: number;\n  denominator: number;\n}\n\nexport interface IImageExtended extends HTMLImageElement {\n  exifdata: any;\n  iptcdata: any;\n}\n\n// Console debug wrapper that makes code looks a little bit cleaner\nexport class Debug {\n  public static log(...args: any[]) {\n    if (Exif.debug) {\n      console.log(args);\n    }\n  }\n}\n\nexport class Exif {\n  public static debug: boolean = false;\n\n  public static IptcFieldMap: any = {\n    0x78: \"caption\",\n    0x6e: \"credit\",\n    0x19: \"keywords\",\n    0x37: \"dateCreated\",\n    0x50: \"byline\",\n    0x55: \"bylineTitle\",\n    0x7a: \"captionWriter\",\n    0x69: \"headline\",\n    0x74: \"copyright\",\n    0x0f: \"category\"\n  };\n\n  public static Tags: any = {\n    // version tags\n    0x9000: \"ExifVersion\", // EXIF version\n    0xa000: \"FlashpixVersion\", // Flashpix format version\n\n    // colorspace tags\n    0xa001: \"ColorSpace\", // Color space information tag\n\n    // image configuration\n    0xa002: \"PixelXDimension\", // Valid width of meaningful image\n    0xa003: \"PixelYDimension\", // Valid height of meaningful image\n    0x9101: \"ComponentsConfiguration\", // Information about channels\n    0x9102: \"CompressedBitsPerPixel\", // Compressed bits per pixel\n\n    // user information\n    0x927c: \"MakerNote\", // Any desired information written by the manufacturer\n    0x9286: \"UserComment\", // Comments by user\n\n    // related file\n    0xa004: \"RelatedSoundFile\", // Name of related sound file\n\n    // date and time\n    0x9003: \"DateTimeOriginal\", // Date and time when the original image was generated\n    0x9004: \"DateTimeDigitized\", // Date and time when the image was stored digitally\n    0x9290: \"SubsecTime\", // Fractions of seconds for DateTime\n    0x9291: \"SubsecTimeOriginal\", // Fractions of seconds for DateTimeOriginal\n    0x9292: \"SubsecTimeDigitized\", // Fractions of seconds for DateTimeDigitized\n\n    // picture-taking conditions\n    0x829a: \"ExposureTime\", // Exposure time (in seconds)\n    0x829d: \"FNumber\", // F number\n    0x8822: \"ExposureProgram\", // Exposure program\n    0x8824: \"SpectralSensitivity\", // Spectral sensitivity\n    0x8827: \"ISOSpeedRatings\", // ISO speed rating\n    0x8828: \"OECF\", // Optoelectric conversion factor\n    0x9201: \"ShutterSpeedValue\", // Shutter speed\n    0x9202: \"ApertureValue\", // Lens aperture\n    0x9203: \"BrightnessValue\", // Value of brightness\n    0x9204: \"ExposureBias\", // Exposure bias\n    0x9205: \"MaxApertureValue\", // Smallest F number of lens\n    0x9206: \"SubjectDistance\", // Distance to subject in meters\n    0x9207: \"MeteringMode\", // Metering mode\n    0x9208: \"LightSource\", // Kind of light source\n    0x9209: \"Flash\", // Flash status\n    0x9214: \"SubjectArea\", // Location and area of main subject\n    0x920a: \"FocalLength\", // Focal length of the lens in mm\n    0xa20b: \"FlashEnergy\", // Strobe energy in BCPS\n    0xa20c: \"SpatialFrequencyResponse\", //\n    0xa20e: \"FocalPlaneXResolution\", // Number of pixels in width direction per FocalPlaneResolutionUnit\n    0xa20f: \"FocalPlaneYResolution\", // Number of pixels in height direction per FocalPlaneResolutionUnit\n    0xa210: \"FocalPlaneResolutionUnit\", // Unit for measuring FocalPlaneXResolution and FocalPlaneYResolution\n    0xa214: \"SubjectLocation\", // Location of subject in image\n    0xa215: \"ExposureIndex\", // Exposure index selected on camera\n    0xa217: \"SensingMethod\", // Image sensor type\n    0xa300: \"FileSource\", // Image source (3 == DSC)\n    0xa301: \"SceneType\", // Scene type (1 == directly photographed)\n    0xa302: \"CFAPattern\", // Color filter array geometric pattern\n    0xa401: \"CustomRendered\", // Special processing\n    0xa402: \"ExposureMode\", // Exposure mode\n    0xa403: \"WhiteBalance\", // 1 = auto white balance, 2 = manual\n    0xa404: \"DigitalZoomRation\", // Digital zoom ratio\n    0xa405: \"FocalLengthIn35mmFilm\", // Equivalent foacl length assuming 35mm film camera (in mm)\n    0xa406: \"SceneCaptureType\", // Type of scene\n    0xa407: \"GainControl\", // Degree of overall image gain adjustment\n    0xa408: \"Contrast\", // Direction of contrast processing applied by camera\n    0xa409: \"Saturation\", // Direction of saturation processing applied by camera\n    0xa40a: \"Sharpness\", // Direction of sharpness processing applied by camera\n    0xa40b: \"DeviceSettingDescription\", //\n    0xa40c: \"SubjectDistanceRange\", // Distance to subject\n\n    // other tags\n    0xa005: \"InteroperabilityIFDPointer\",\n    0xa420: \"ImageUniqueID\" // Identifier assigned uniquely to each image\n  };\n\n  public static TiffTags: any = {\n    0x0100: \"ImageWidth\",\n    0x0101: \"ImageHeight\",\n    0x8769: \"ExifIFDPointer\",\n    0x8825: \"GPSInfoIFDPointer\",\n    0xa005: \"InteroperabilityIFDPointer\",\n    0x0102: \"BitsPerSample\",\n    0x0103: \"Compression\",\n    0x0106: \"PhotometricInterpretation\",\n    0x0112: \"Orientation\",\n    0x0115: \"SamplesPerPixel\",\n    0x011c: \"PlanarConfiguration\",\n    0x0212: \"YCbCrSubSampling\",\n    0x0213: \"YCbCrPositioning\",\n    0x011a: \"XResolution\",\n    0x011b: \"YResolution\",\n    0x0128: \"ResolutionUnit\",\n    0x0111: \"StripOffsets\",\n    0x0116: \"RowsPerStrip\",\n    0x0117: \"StripByteCounts\",\n    0x0201: \"JPEGInterchangeFormat\",\n    0x0202: \"JPEGInterchangeFormatLength\",\n    0x012d: \"TransferFunction\",\n    0x013e: \"WhitePoint\",\n    0x013f: \"PrimaryChromaticities\",\n    0x0211: \"YCbCrCoefficients\",\n    0x0214: \"ReferenceBlackWhite\",\n    0x0132: \"DateTime\",\n    0x010e: \"ImageDescription\",\n    0x010f: \"Make\",\n    0x0110: \"Model\",\n    0x0131: \"Software\",\n    0x013b: \"Artist\",\n    0x8298: \"Copyright\"\n  };\n\n  public static GPSTags: any = {\n    0x0000: \"GPSVersionID\",\n    0x0001: \"GPSLatitudeRef\",\n    0x0002: \"GPSLatitude\",\n    0x0003: \"GPSLongitudeRef\",\n    0x0004: \"GPSLongitude\",\n    0x0005: \"GPSAltitudeRef\",\n    0x0006: \"GPSAltitude\",\n    0x0007: \"GPSTimeStamp\",\n    0x0008: \"GPSSatellites\",\n    0x0009: \"GPSStatus\",\n    0x000a: \"GPSMeasureMode\",\n    0x000b: \"GPSDOP\",\n    0x000c: \"GPSSpeedRef\",\n    0x000d: \"GPSSpeed\",\n    0x000e: \"GPSTrackRef\",\n    0x000f: \"GPSTrack\",\n    0x0010: \"GPSImgDirectionRef\",\n    0x0011: \"GPSImgDirection\",\n    0x0012: \"GPSMapDatum\",\n    0x0013: \"GPSDestLatitudeRef\",\n    0x0014: \"GPSDestLatitude\",\n    0x0015: \"GPSDestLongitudeRef\",\n    0x0016: \"GPSDestLongitude\",\n    0x0017: \"GPSDestBearingRef\",\n    0x0018: \"GPSDestBearing\",\n    0x0019: \"GPSDestDistanceRef\",\n    0x001a: \"GPSDestDistance\",\n    0x001b: \"GPSProcessingMethod\",\n    0x001c: \"GPSAreaInformation\",\n    0x001d: \"GPSDateStamp\",\n    0x001e: \"GPSDifferential\"\n  };\n\n  public static StringValues: any = {\n    ExposureProgram: {\n      0: \"Not defined\",\n      1: \"Manual\",\n      2: \"Normal program\",\n      3: \"Aperture priority\",\n      4: \"Shutter priority\",\n      5: \"Creative program\",\n      6: \"Action program\",\n      7: \"Portrait mode\",\n      8: \"Landscape mode\"\n    },\n    MeteringMode: {\n      0: \"Unknown\",\n      1: \"Average\",\n      2: \"CenterWeightedAverage\",\n      3: \"Spot\",\n      4: \"MultiSpot\",\n      5: \"Pattern\",\n      6: \"Partial\",\n      255: \"Other\"\n    },\n    LightSource: {\n      0: \"Unknown\",\n      1: \"Daylight\",\n      2: \"Fluorescent\",\n      3: \"Tungsten (incandescent light)\",\n      4: \"Flash\",\n      9: \"Fine weather\",\n      10: \"Cloudy weather\",\n      11: \"Shade\",\n      12: \"Daylight fluorescent (D 5700 - 7100K)\",\n      13: \"Day white fluorescent (N 4600 - 5400K)\",\n      14: \"Cool white fluorescent (W 3900 - 4500K)\",\n      15: \"White fluorescent (WW 3200 - 3700K)\",\n      17: \"Standard light A\",\n      18: \"Standard light B\",\n      19: \"Standard light C\",\n      20: \"D55\",\n      21: \"D65\",\n      22: \"D75\",\n      23: \"D50\",\n      24: \"ISO studio tungsten\",\n      255: \"Other\"\n    },\n    Flash: {\n      0x0000: \"Flash did not fire\",\n      0x0001: \"Flash fired\",\n      0x0005: \"Strobe return light not detected\",\n      0x0007: \"Strobe return light detected\",\n      0x0009: \"Flash fired, compulsory flash mode\",\n      0x000d: \"Flash fired, compulsory flash mode, return light not detected\",\n      0x000f: \"Flash fired, compulsory flash mode, return light detected\",\n      0x0010: \"Flash did not fire, compulsory flash mode\",\n      0x0018: \"Flash did not fire, auto mode\",\n      0x0019: \"Flash fired, auto mode\",\n      0x001d: \"Flash fired, auto mode, return light not detected\",\n      0x001f: \"Flash fired, auto mode, return light detected\",\n      0x0020: \"No flash function\",\n      0x0041: \"Flash fired, red-eye reduction mode\",\n      0x0045: \"Flash fired, red-eye reduction mode, return light not detected\",\n      0x0047: \"Flash fired, red-eye reduction mode, return light detected\",\n      0x0049: \"Flash fired, compulsory flash mode, red-eye reduction mode\",\n      0x004d: \"Flash fired, compulsory flash mode, red-eye reduction mode, return light not detected\",\n      0x004f: \"Flash fired, compulsory flash mode, red-eye reduction mode, return light detected\",\n      0x0059: \"Flash fired, auto mode, red-eye reduction mode\",\n      0x005d: \"Flash fired, auto mode, return light not detected, red-eye reduction mode\",\n      0x005f: \"Flash fired, auto mode, return light detected, red-eye reduction mode\"\n    },\n    SensingMethod: {\n      1: \"Not defined\",\n      2: \"One-chip color area sensor\",\n      3: \"Two-chip color area sensor\",\n      4: \"Three-chip color area sensor\",\n      5: \"Color sequential area sensor\",\n      7: \"Trilinear sensor\",\n      8: \"Color sequential linear sensor\"\n    },\n    SceneCaptureType: {\n      0: \"Standard\",\n      1: \"Landscape\",\n      2: \"Portrait\",\n      3: \"Night scene\"\n    },\n    SceneType: {\n      1: \"Directly photographed\"\n    },\n    CustomRendered: {\n      0: \"Normal process\",\n      1: \"Custom process\"\n    },\n    WhiteBalance: {\n      0: \"Auto white balance\",\n      1: \"Manual white balance\"\n    },\n    GainControl: {\n      0: \"None\",\n      1: \"Low gain up\",\n      2: \"High gain up\",\n      3: \"Low gain down\",\n      4: \"High gain down\"\n    },\n    Contrast: {\n      0: \"Normal\",\n      1: \"Soft\",\n      2: \"Hard\"\n    },\n    Saturation: {\n      0: \"Normal\",\n      1: \"Low saturation\",\n      2: \"High saturation\"\n    },\n    Sharpness: {\n      0: \"Normal\",\n      1: \"Soft\",\n      2: \"Hard\"\n    },\n    SubjectDistanceRange: {\n      0: \"Unknown\",\n      1: \"Macro\",\n      2: \"Close view\",\n      3: \"Distant view\"\n    },\n    FileSource: {\n      3: \"DSC\"\n    },\n\n    Components: {\n      0: \"\",\n      1: \"Y\",\n      2: \"Cb\",\n      3: \"Cr\",\n      4: \"R\",\n      5: \"G\",\n      6: \"B\"\n    }\n  };\n\n  public static addEvent(\n    element: EventTarget | any,\n    event: string,\n    handler: EventListener\n  ) {\n    if (element.addEventListener) {\n      element.addEventListener(event, handler, false);\n    } else {\n      // Hello, IE!\n      if (element.attachEvent) {\n        element.attachEvent(\"on\" + event, handler);\n      }\n    }\n  }\n\n  public static imageHasData(img: IImageExtended) {\n    return !!img.exifdata;\n  }\n\n  public static base64ToArrayBuffer(base64: string): ArrayBuffer {\n    base64 = base64.replace(/^data:([^;]+);base64,/gim, \"\");\n    let binary: string = atob(base64);\n    let len: number = binary.length;\n    let buffer: ArrayBuffer = new ArrayBuffer(len);\n    let view: Uint8Array = new Uint8Array(buffer);\n    for (let i = 0; i < len; i++) {\n      view[i] = binary.charCodeAt(i);\n    }\n    return buffer;\n  }\n\n  public static objectURLToBlob(url: string, callback: Function) {\n    let http: XMLHttpRequest = new XMLHttpRequest();\n    http.open(\"GET\", url, true);\n    http.responseType = \"blob\";\n    http.onload = function() {\n      if (http.status === 200 || http.status === 0) {\n        callback(http.response);\n      }\n    };\n    http.send();\n  }\n\n  public static getImageData(\n    img: IImageExtended | Blob | File,\n    callback: Function\n  ) {\n    function handleBinaryFile(binFile: ArrayBuffer) {\n      let data = Exif.findEXIFinJPEG(binFile);\n      let iptcdata = Exif.findIPTCinJPEG(binFile);\n      (img as IImageExtended).exifdata = data || {};\n      (img as IImageExtended).iptcdata = iptcdata || {};\n      if (callback) {\n        callback.call(img);\n      }\n    }\n\n    if (\"src\" in img && (img as IImageExtended).src) {\n      if (/^data:/i.test((img as IImageExtended).src)) {\n        // Data URI\n        let arrayBuffer = Exif.base64ToArrayBuffer((img as IImageExtended).src);\n        handleBinaryFile(arrayBuffer);\n      } else {\n        if (/^blob:/i.test((img as IImageExtended).src)) {\n          // Object URL\n          let fileReader = new FileReader();\n          fileReader.onload = (e: any) => {\n            handleBinaryFile(e.target.result);\n          };\n          Exif.objectURLToBlob((img as IImageExtended).src, (blob: Blob) => {\n            fileReader.readAsArrayBuffer(blob);\n          });\n        } else {\n          let http = new XMLHttpRequest();\n          http.onload = function() {\n            if (http.status === 200 || http.status === 0) {\n              handleBinaryFile(http.response);\n            } else {\n              throw \"Could not load image\";\n            }\n          };\n          http.open(\"GET\", (img as IImageExtended).src, true);\n          http.responseType = \"arraybuffer\";\n          http.send(null);\n        }\n      }\n    } else {\n      if (FileReader && (img instanceof Blob || img instanceof File)) {\n        let fileReader = new FileReader();\n        fileReader.onload = function(e: any) {\n          Debug.log(\"Got file of length \" + e.target.result.byteLength);\n          handleBinaryFile(e.target.result);\n        };\n\n        fileReader.readAsArrayBuffer(img);\n      }\n    }\n  }\n\n  public static findEXIFinJPEG(file: ArrayBuffer) {\n    let dataView = new DataView(file);\n\n    Debug.log(\"Got file of length \" + file.byteLength);\n    if (dataView.getUint8(0) !== 0xff || dataView.getUint8(1) !== 0xd8) {\n      Debug.log(\"Not a valid JPEG\");\n      return false; // not a valid jpeg\n    }\n\n    let offset = 2;\n    let length: number = file.byteLength;\n    let marker: number;\n\n    while (offset < length) {\n      if (dataView.getUint8(offset) !== 0xff) {\n        Debug.log(\n          \"Not a valid marker at offset \" +\n            offset +\n            \", found: \" +\n            dataView.getUint8(offset)\n        );\n        return false; // not a valid marker, something is wrong\n      }\n\n      marker = dataView.getUint8(offset + 1);\n      Debug.log(marker);\n\n      // we could implement handling for other markers here,\n      // but we're only looking for 0xFFE1 for EXIF data\n      if (marker === 225) {\n        Debug.log(\"Found 0xFFE1 marker\");\n        return Exif.readEXIFData(dataView, offset + 4); // , dataView.getUint16(offset + 2) - 2);\n        // offset += 2 + file.getShortAt(offset+2, true);\n      } else {\n        offset += 2 + dataView.getUint16(offset + 2);\n      }\n    }\n  }\n\n  public static findIPTCinJPEG(file: ArrayBuffer) {\n    let dataView = new DataView(file);\n\n    Debug.log(\"Got file of length \" + file.byteLength);\n    if (dataView.getUint8(0) !== 0xff || dataView.getUint8(1) !== 0xd8) {\n      Debug.log(\"Not a valid JPEG\");\n      return false; // not a valid jpeg\n    }\n\n    let offset = 2;\n    let length = file.byteLength;\n\n    let isFieldSegmentStart = function(_dataView: DataView, _offset: number) {\n      return (\n        _dataView.getUint8(_offset) === 0x38 &&\n        _dataView.getUint8(_offset + 1) === 0x42 &&\n        _dataView.getUint8(_offset + 2) === 0x49 &&\n        _dataView.getUint8(_offset + 3) === 0x4d &&\n        _dataView.getUint8(_offset + 4) === 0x04 &&\n        _dataView.getUint8(_offset + 5) === 0x04\n      );\n    };\n\n    while (offset < length) {\n      if (isFieldSegmentStart(dataView, offset)) {\n        // Get the length of the name header (which is padded to an even number of bytes)\n        let nameHeaderLength = dataView.getUint8(offset + 7);\n        if (nameHeaderLength % 2 !== 0) {\n          nameHeaderLength += 1;\n        }\n        // Check for pre photoshop 6 format\n        if (nameHeaderLength === 0) {\n          // Always 4\n          nameHeaderLength = 4;\n        }\n\n        let startOffset = offset + 8 + nameHeaderLength;\n        let sectionLength = dataView.getUint16(offset + 6 + nameHeaderLength);\n\n        return Exif.readIPTCData(file, startOffset, sectionLength);\n      }\n\n      // Not the marker, continue searching\n      offset++;\n    }\n  }\n\n  public static readIPTCData(\n    file: ArrayBuffer,\n    startOffset: number,\n    sectionLength: number\n  ) {\n    let dataView = new DataView(file);\n    let data: any = {};\n    let fieldValue: any,\n      fieldName: string,\n      dataSize: number,\n      segmentType: any,\n      segmentSize: number;\n    let segmentStartPos = startOffset;\n    while (segmentStartPos < startOffset + sectionLength) {\n      if (\n        dataView.getUint8(segmentStartPos) === 0x1c &&\n        dataView.getUint8(segmentStartPos + 1) === 0x02\n      ) {\n        segmentType = dataView.getUint8(segmentStartPos + 2);\n        if (segmentType in Exif.IptcFieldMap) {\n          dataSize = dataView.getInt16(segmentStartPos + 3);\n          segmentSize = dataSize + 5;\n          fieldName = Exif.IptcFieldMap[segmentType];\n          fieldValue = Exif.getStringFromDB(\n            dataView,\n            segmentStartPos + 5,\n            dataSize\n          );\n          // Check if we already stored a value with this name\n          if (data.hasOwnProperty(fieldName)) {\n            // Value already stored with this name, create multivalue field\n            if (data[fieldName] instanceof Array) {\n              data[fieldName].push(fieldValue);\n            } else {\n              data[fieldName] = [data[fieldName], fieldValue];\n            }\n          } else {\n            data[fieldName] = fieldValue;\n          }\n        }\n      }\n      segmentStartPos++;\n    }\n    return data;\n  }\n\n  public static readTags(\n    file: DataView,\n    tiffStart: number,\n    dirStart: number,\n    strings: string[],\n    bigEnd: boolean\n  ): Object {\n    let entries: number = file.getUint16(dirStart, !bigEnd);\n    let tags: any = {};\n    let entryOffset: number;\n    let tag: string;\n\n    for (let i = 0; i < entries; i++) {\n      entryOffset = dirStart + i * 12 + 2;\n      tag = strings[file.getUint16(entryOffset, !bigEnd)];\n      if (!tag) {\n        Debug.log(\"Unknown tag: \" + file.getUint16(entryOffset, !bigEnd));\n      }\n      tags[tag] = Exif.readTagValue(\n        file,\n        entryOffset,\n        tiffStart,\n        dirStart,\n        bigEnd\n      );\n    }\n    return tags;\n  }\n\n  public static readTagValue(\n    file: any,\n    entryOffset: number,\n    tiffStart: number,\n    dirStart: number,\n    bigEnd: boolean\n  ): any {\n    let type: number = file.getUint16(entryOffset + 2, !bigEnd);\n    let numValues = file.getUint32(entryOffset + 4, !bigEnd);\n    let valueOffset = file.getUint32(entryOffset + 8, !bigEnd) + tiffStart;\n    let offset: number;\n    let vals: any[], val: any, n: number;\n    let numerator: any;\n    let denominator: any;\n\n    switch (type) {\n      case 1: // byte, 8-bit unsigned int\n      case 7: // undefined, 8-bit byte, value depending on field\n        if (numValues === 1) {\n          return file.getUint8(entryOffset + 8, !bigEnd);\n        } else {\n          offset = numValues > 4 ? valueOffset : entryOffset + 8;\n          vals = [];\n          for (n = 0; n < numValues; n++) {\n            vals[n] = file.getUint8(offset + n);\n          }\n          return vals;\n        }\n\n      case 2: // ascii, 8-bit byte\n        offset = numValues > 4 ? valueOffset : entryOffset + 8;\n        return Exif.getStringFromDB(file, offset, numValues - 1);\n\n      case 3: // short, 16 bit int\n        if (numValues === 1) {\n          return file.getUint16(entryOffset + 8, !bigEnd);\n        } else {\n          offset = numValues > 2 ? valueOffset : entryOffset + 8;\n          vals = [];\n          for (n = 0; n < numValues; n++) {\n            vals[n] = file.getUint16(offset + 2 * n, !bigEnd);\n          }\n          return vals;\n        }\n\n      case 4: // long, 32 bit int\n        if (numValues === 1) {\n          return file.getUint32(entryOffset + 8, !bigEnd);\n        } else {\n          vals = [];\n          for (n = 0; n < numValues; n++) {\n            vals[n] = file.getUint32(valueOffset + 4 * n, !bigEnd);\n          }\n          return vals;\n        }\n\n      case 5: // rational = two long values, first is numerator, second is denominator\n        if (numValues === 1) {\n          numerator = file.getUint32(valueOffset, !bigEnd);\n          denominator = file.getUint32(valueOffset + 4, !bigEnd);\n          val = new Fraction(numerator / denominator);\n          val.numerator = numerator;\n          val.denominator = denominator;\n          return val;\n        } else {\n          vals = [];\n          for (n = 0; n < numValues; n++) {\n            numerator = file.getUint32(valueOffset + 8 * n, !bigEnd);\n            denominator = file.getUint32(valueOffset + 4 + 8 * n, !bigEnd);\n            vals[n] = new Fraction(numerator / denominator);\n            vals[n].numerator = numerator;\n            vals[n].denominator = denominator;\n          }\n          return vals;\n        }\n\n      case 9: // slong, 32 bit signed int\n        if (numValues === 1) {\n          return file.getInt32(entryOffset + 8, !bigEnd);\n        } else {\n          vals = [];\n          for (n = 0; n < numValues; n++) {\n            vals[n] = file.getInt32(valueOffset + 4 * n, !bigEnd);\n          }\n          return vals;\n        }\n\n      case 10: // signed rational, two slongs, first is numerator, second is denominator\n        if (numValues === 1) {\n          return (\n            file.getInt32(valueOffset, !bigEnd) /\n            file.getInt32(valueOffset + 4, !bigEnd)\n          );\n        } else {\n          vals = [];\n          for (n = 0; n < numValues; n++) {\n            vals[n] =\n              file.getInt32(valueOffset + 8 * n, !bigEnd) /\n              file.getInt32(valueOffset + 4 + 8 * n, !bigEnd);\n          }\n          return vals;\n        }\n      default:\n        break;\n    }\n  }\n\n  public static getStringFromDB(\n    buffer: DataView,\n    start: number,\n    length: number\n  ): string {\n    let outstr = \"\";\n    for (let n = start; n < start + length; n++) {\n      outstr += String.fromCharCode(buffer.getUint8(n));\n    }\n    return outstr;\n  }\n\n  public static readEXIFData(file: DataView, start: number): any {\n    if (Exif.getStringFromDB(file, start, 4) !== \"Exif\") {\n      Debug.log(\"Not valid EXIF data! \" + Exif.getStringFromDB(file, start, 4));\n\n      return false;\n    }\n\n    let bigEnd: boolean,\n      tags: any,\n      tag: string,\n      exifData: any,\n      gpsData: any,\n      tiffOffset: number = start + 6;\n\n    // test for TIFF validity and endianness\n    if (file.getUint16(tiffOffset) === 0x4949) {\n      bigEnd = false;\n    } else {\n      if (file.getUint16(tiffOffset) === 0x4d4d) {\n        bigEnd = true;\n      } else {\n        Debug.log(\"Not valid TIFF data! (no 0x4949 or 0x4D4D)\");\n        return false;\n      }\n    }\n\n    if (file.getUint16(tiffOffset + 2, !bigEnd) !== 0x002a) {\n      Debug.log(\"Not valid TIFF data! (no 0x002A)\");\n      return false;\n    }\n\n    let firstIFDOffset = file.getUint32(tiffOffset + 4, !bigEnd);\n\n    if (firstIFDOffset < 0x00000008) {\n      Debug.log(\n        \"Not valid TIFF data! (First offset less than 8)\",\n        file.getUint32(tiffOffset + 4, !bigEnd)\n      );\n      return false;\n    }\n\n    tags = Exif.readTags(\n      file,\n      tiffOffset,\n      tiffOffset + firstIFDOffset,\n      Exif.TiffTags,\n      bigEnd\n    );\n\n    if (tags.ExifIFDPointer) {\n      exifData = Exif.readTags(\n        file,\n        tiffOffset,\n        tiffOffset + tags.ExifIFDPointer,\n        Exif.Tags,\n        bigEnd\n      );\n      for (tag in exifData) {\n        if ({}.hasOwnProperty.call(exifData, tag)) {\n          switch (tag) {\n            case \"LightSource\":\n            case \"Flash\":\n            case \"MeteringMode\":\n            case \"ExposureProgram\":\n            case \"SensingMethod\":\n            case \"SceneCaptureType\":\n            case \"SceneType\":\n            case \"CustomRendered\":\n            case \"WhiteBalance\":\n            case \"GainControl\":\n            case \"Contrast\":\n            case \"Saturation\":\n            case \"Sharpness\":\n            case \"SubjectDistanceRange\":\n            case \"FileSource\":\n              exifData[tag] = Exif.StringValues[tag][exifData[tag]];\n              break;\n            case \"ExifVersion\":\n            case \"FlashpixVersion\":\n              exifData[tag] = String.fromCharCode(\n                exifData[tag][0],\n                exifData[tag][1],\n                exifData[tag][2],\n                exifData[tag][3]\n              );\n              break;\n            case \"ComponentsConfiguration\":\n              let compopents = \"Components\";\n              exifData[tag] =\n                Exif.StringValues[compopents][exifData[tag][0]] +\n                Exif.StringValues[compopents][exifData[tag][1]] +\n                Exif.StringValues[compopents][exifData[tag][2]] +\n                Exif.StringValues[compopents][exifData[tag][3]];\n              break;\n            default:\n              break;\n          }\n          tags[tag] = exifData[tag];\n        }\n      }\n    }\n\n    if (tags.GPSInfoIFDPointer) {\n      gpsData = Exif.readTags(\n        file,\n        tiffOffset,\n        tiffOffset + tags.GPSInfoIFDPointer,\n        Exif.GPSTags,\n        bigEnd\n      );\n      for (tag in gpsData) {\n        if ({}.hasOwnProperty.call(gpsData, tag)) {\n          switch (tag) {\n            case \"GPSVersionID\":\n              gpsData[tag] =\n                gpsData[tag][0] +\n                \".\" +\n                gpsData[tag][1] +\n                \".\" +\n                gpsData[tag][2] +\n                \".\" +\n                gpsData[tag][3];\n              break;\n            default:\n              break;\n          }\n          tags[tag] = gpsData[tag];\n        }\n      }\n    }\n\n    return tags;\n  }\n\n  //   get rid of this silly issue\n  private static checkImageType(img: any) {\n    return img instanceof Image || img instanceof HTMLImageElement;\n  }\n\n  public static getData(\n    img: IImageExtended | HTMLImageElement,\n    callback: Function\n  ) {\n    if (this.checkImageType(img) && !img.complete) {\n      return false;\n    }\n\n    if (!Exif.imageHasData(img as IImageExtended)) {\n      Exif.getImageData(img as IImageExtended, callback);\n    } else {\n      if (callback) {\n        callback.call(img);\n      }\n    }\n    return true;\n  }\n\n  public static getTag(img: any, tag: string) {\n    if (!Exif.imageHasData(img)) {\n      return;\n    }\n    return img.exifdata[tag];\n  }\n\n  public static getAllTags(img: any) {\n    if (!Exif.imageHasData(img)) {\n      return {};\n    }\n    let a: string,\n      data: any = img.exifdata,\n      tags: any = {};\n    for (a in data) {\n      if (data.hasOwnProperty(a)) {\n        tags[a] = data[a];\n      }\n    }\n    return tags;\n  }\n\n  public static pretty(img: IImageExtended) {\n    if (!Exif.imageHasData(img)) {\n      return \"\";\n    }\n    let a: any,\n      data: any = img.exifdata,\n      strPretty = \"\";\n    for (a in data) {\n      if (data.hasOwnProperty(a)) {\n        if (typeof data[a] === \"object\") {\n          if (data[a] instanceof Number) {\n            strPretty += `${a} : ${data[a]} [${data[a].numerator}/${\n              data[a].denominator\n            }]\\r\\n`;\n          } else {\n            strPretty += `${a} : [${data[a].length} values]\\r\\n`;\n          }\n        } else {\n          strPretty += `${a} : ${data[a]}\\r\\n`;\n        }\n      }\n    }\n    return strPretty;\n  }\n\n  public static readFromBinaryFile(file: ArrayBuffer) {\n    return Exif.findEXIFinJPEG(file);\n  }\n}\n"]}