{"version":3,"sources":["../../src/cropperSettings.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,mBAAmB,EAAE,MAAM,uBAAuB,CAAC;AAgC5D;IAyCE,yBAAY,QAA2B;QAxChC,gBAAW,GAAW,GAAG,CAAC;QAC1B,iBAAY,GAAW,GAAG,CAAC;QAE3B,kBAAa,GAAY,KAAK,CAAC;QAI/B,UAAK,GAAW,GAAG,CAAC;QACpB,WAAM,GAAW,GAAG,CAAC;QAErB,aAAQ,GAAW,EAAE,CAAC;QACtB,cAAS,GAAW,EAAE,CAAC;QACvB,gCAA2B,GAAY,IAAI,CAAC;QAE5C,iBAAY,GAAW,GAAG,CAAC;QAC3B,kBAAa,GAAW,GAAG,CAAC;QAE5B,wBAAmB,GAAwB,IAAI,mBAAmB,EAAE,CAAC;QACrE,gBAAW,GAAW,EAAE,CAAC;QACzB,gBAAW,GAAY,KAAK,CAAC;QAM7B,yBAAoB,GAAW,CAAC,CAAC;QACjC,sBAAiB,GAAW,EAAE,CAAC;QAC/B,qBAAgB,GAAY,IAAI,CAAC;QAEjC,sBAAiB,GAAW,yBAAyB,CAAC;QACtD,iBAAY,GAAY,IAAI,CAAC;QAC7B,iBAAY,GAAY,KAAK,CAAC;QAE9B,kBAAa,GAAW,GAAG,CAAC;QAE5B,wBAAmB,GAAY,KAAK,CAAC;QAEpC,aAAQ,GAAY,KAAK,CAAC;QAC1B,gBAAW,GAAY,IAAI,CAAC;QAGlC,EAAE,CAAC,CAAC,OAAO,QAAQ,KAAK,QAAQ,CAAC,CAAC,CAAC;YACjC,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;QAChC,CAAC;IACH,CAAC;IAED,sBAAI,oCAAO;aAOX;YACE,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;QACvB,CAAC;aATD,UAAY,GAAY;YACtB,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;YACpB,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gBACR,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YAC1B,CAAC;QACH,CAAC;;;OAAA;IAMD,sBAAI,uCAAU;aAUd;YACE,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC;QAC1B,CAAC;aAZD,UAAe,GAAY;YACzB,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC;YACvB,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,KAAK,IAAI,IAAI,IAAI,CAAC,WAAW,KAAK,KAAK,CAAC,CAAC,CAAC;gBACzD,OAAO,CAAC,KAAK,CACX,4EAA4E,CAC7E,CAAC;gBACF,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YAC1B,CAAC;QACH,CAAC;;;OAAA;IAKH,sBAAC;AAAD,CAvEA,AAuEC,IAAA","file":"cropperSettings.js","sourceRoot":"","sourcesContent":["import { CropperDrawSettings } from \"./cropperDrawSettings\";\n\nexport interface ICropperSettings {\n  canvasWidth?: number;\n  canvasHeight?: number;\n  dynamicSizing?: boolean;\n  cropperClass?: string;\n  croppingClass?: string;\n  width?: number;\n  height?: number;\n  minWidth?: number;\n  minHeight?: number;\n  minWithRelativeToResolution?: boolean;\n  croppedWidth?: number;\n  croppedHeight?: number;\n  cropperDrawSettings?: any;\n  touchRadius?: number;\n  noFileInput?: boolean;\n  fileType?: string;\n  resampleFn?: Function;\n  markerSizeMultiplier?: number;\n  centerTouchRadius?: number;\n  showCenterMarker?: boolean;\n  allowedFilesRegex?: RegExp;\n  cropOnResize?: boolean;\n  preserveSize?: boolean;\n  compressRatio?: number;\n  rounded?: boolean;\n  keepAspect?: boolean;\n  showFullCropInitial?: boolean;\n}\n\nexport class CropperSettings implements ICropperSettings {\n  public canvasWidth: number = 300;\n  public canvasHeight: number = 300;\n\n  public dynamicSizing: boolean = false;\n  public cropperClass: string;\n  public croppingClass: string;\n\n  public width: number = 200;\n  public height: number = 200;\n\n  public minWidth: number = 50;\n  public minHeight: number = 50;\n  public minWithRelativeToResolution: boolean = true;\n\n  public croppedWidth: number = 100;\n  public croppedHeight: number = 100;\n\n  public cropperDrawSettings: CropperDrawSettings = new CropperDrawSettings();\n  public touchRadius: number = 20;\n  public noFileInput: boolean = false;\n\n  public fileType: string;\n\n  public resampleFn: Function;\n\n  public markerSizeMultiplier: number = 1;\n  public centerTouchRadius: number = 20;\n  public showCenterMarker: boolean = true;\n\n  public allowedFilesRegex: RegExp = /\\.(jpe?g|png|gif|bmp)$/i;\n  public cropOnResize: boolean = true;\n  public preserveSize: boolean = false;\n\n  public compressRatio: number = 1.0;\n\n  public showFullCropInitial: boolean = false;\n\n  private _rounded: boolean = false;\n  private _keepAspect: boolean = true;\n\n  constructor(settings?: ICropperSettings) {\n    if (typeof settings === \"object\") {\n      Object.assign(this, settings);\n    }\n  }\n\n  set rounded(val: boolean) {\n    this._rounded = val;\n    if (val) {\n      this._keepAspect = true;\n    }\n  }\n\n  get rounded(): boolean {\n    return this._rounded;\n  }\n\n  set keepAspect(val: boolean) {\n    this._keepAspect = val;\n    if (this._rounded === true && this._keepAspect === false) {\n      console.error(\n        \"Cannot set keep aspect to false on rounded cropper. Ellipsis not supported\"\n      );\n      this._keepAspect = true;\n    }\n  }\n\n  get keepAspect(): boolean {\n    return this._keepAspect;\n  }\n}\n"]}